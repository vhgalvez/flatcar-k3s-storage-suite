# playbooks\cleanup_longhorn.yml
---
- name: üí£ Limpiar completamente /dev/vdb en storage y workers
  hosts: storage,workers
  gather_facts: false
  become: true

  tasks:
    - name: üîç Mostrar si hay montajes activos en /dev/vdb
      raw: mount | grep vdb || true
      changed_when: false

    - name: üí£ Desmontar vol√∫menes y esperar
      raw: |
        umount -f /mnt/longhorn-disk 2>/dev/null || true
        umount -f /srv/nfs/postgresql 2>/dev/null || true
        umount -f /srv/nfs/shared 2>/dev/null || true
        sleep 2
      ignore_errors: true

    - name: ‚è≥ Esperar a que /dev/vdb ya no est√© montado
      raw: |
        for i in $(seq 1 5); do
          mount | grep -q vdb || exit 0
          sleep 1
        done
        exit 1
      register: umount_check
      failed_when: umount_check.rc != 0
      changed_when: false

    - name: ‚ùå Detener servicios que puedan bloquear el disco (solo en storage)
      raw: |
        systemctl stop nfs-server || true
        systemctl stop iscsid || true
      when: "'storage' in group_names"

    - name: üßπ Eliminar vol√∫menes LVM (si existen)
      raw: |
        lvremove -f /dev/vg_storage/postgres_lv 2>/dev/null || true
        lvremove -f /dev/vg_storage/shared_lv 2>/dev/null || true
        lvremove -f /dev/vg_storage/longhorn_lv 2>/dev/null || true
        sleep 1

    - name: üß± Eliminar grupo de vol√∫menes
      raw: vgremove -f vg_storage 2>/dev/null || true

    - name: üíΩ Eliminar volumen f√≠sico
      raw: pvremove -f /dev/vdb1 2>/dev/null || true

    - name: ‚ùé Eliminar partici√≥n y limpiar firmas
      raw: |
        parted -s /dev/vdb rm 1 2>/dev/null || true
        wipefs -a /dev/vdb 2>/dev/null || true

    - name: üßº Esperar a que el sistema asiente los cambios
      raw: udevadm settle

# ------------------------------------------------------------------------

- name: üßπ Limpiar namespace de Longhorn y recursos relacionados en Kubernetes
  hosts: controller
  become: true
  gather_facts: false

  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    longhorn_namespace: "longhorn-system"

  tasks:
    - name: ‚ùå Borrar recursos de Longhorn con kubectl
      shell: |
        export KUBECONFIG={{ kubeconfig_path }}
        if kubectl get namespace {{ longhorn_namespace }} &>/dev/null; then
          echo "‚úÖ Eliminando recursos del namespace '{{ longhorn_namespace }}'..."
          kubectl delete all --all -n {{ longhorn_namespace }} || true
          kubectl delete pvc --all -n {{ longhorn_namespace }} || true
          kubectl delete pv --all || true
        else
          echo "‚ö†Ô∏è Namespace '{{ longhorn_namespace }}' no existe. Nada que limpiar."
        fi
      changed_when: false

    - name: üß® Eliminar namespace de Longhorn (si existe)
      shell: |
        export KUBECONFIG={{ kubeconfig_path }}
        kubectl delete namespace {{ longhorn_namespace }} || true
      changed_when: false