# playbooks/06_deploy_longhorn.yml
---
- name: 6Ô∏è‚É£ Instalar y validar Longhorn con Helm
  hosts: controller
  become: true
  gather_facts: false

  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    helm_bin: "/usr/local/bin/helm"
    longhorn_namespace: "longhorn-system"

  pre_tasks:

    - name: üîç Verificar si existen recursos en el namespace de Longhorn
      raw: |
        /usr/local/bin/kubectl --kubeconfig {{ kubeconfig_path }} get all -n {{ longhorn_namespace }} || true
      register: longhorn_check
      changed_when: false

    - name: ‚ö†Ô∏è Abortamos si hay residuos de Longhorn
      fail:
        msg: |
          ‚ö†Ô∏è El namespace '{{ longhorn_namespace }}' contiene recursos de una instalaci√≥n anterior.
          üßπ Ejecuta: ansible-playbook playbooks/08_cleanup_longhorn.yml -e "confirm_cleanup=yes"
          Recursos encontrados:
          {{ longhorn_check.stdout }}
      when:
        - "'No resources found' not in longhorn_check.stdout"
        - "'Unable to connect' not in longhorn_check.stdout"

  tasks:

    - name: üì• A√±adir y actualizar repositorio Helm de Longhorn
      raw: |
        {{ helm_bin }} repo add longhorn https://charts.longhorn.io || true
        {{ helm_bin }} repo update --kubeconfig {{ kubeconfig_path }}

    - name: üöÄ Instalar Longhorn con Helm
      raw: |
        {{ helm_bin }} upgrade --install longhorn longhorn/longhorn \
          --kubeconfig {{ kubeconfig_path }} \
          --namespace {{ longhorn_namespace }} \
          --create-namespace \
          --wait \
          --timeout 10m0s
      register: longhorn_install
      failed_when: longhorn_install.rc != 0

    - name: ‚è≥ Esperar readiness de pods
      raw: |
        /usr/local/bin/kubectl --kubeconfig {{ kubeconfig_path }} wait --for=condition=Ready pod -n {{ longhorn_namespace }} --all --timeout=300s
      register: pod_ready
      failed_when: pod_ready.rc != 0

    - name: üìä Mostrar estado de pods
      raw: |
        /usr/local/bin/kubectl --kubeconfig {{ kubeconfig_path }} get pods -n {{ longhorn_namespace }}
      register: pods

    - name: ‚úÖ Pods desplegados
      debug:
        var: pods.stdout_lines

    - name: üìÅ Validar PVCs y PVs
      raw: |
        /usr/local/bin/kubectl --kubeconfig {{ kubeconfig_path }} get pvc -A
        /usr/local/bin/kubectl --kubeconfig {{ kubeconfig_path }} get pv
      register: volumes_info

    - name: üì¶ Vol√∫menes encontrados
      debug:
        var: volumes_info.stdout_lines