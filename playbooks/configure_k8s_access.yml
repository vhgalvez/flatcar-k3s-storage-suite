# playbooks\configure_k8s_access.yml
---
- name: Configurar acceso al clúster Kubernetes desde el nodo controlador
  hosts: controller
  become: true
  gather_facts: false

  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    kubeconfig_token_path: "/home/victory/.kube/token.jwt"
    vip_kubernetes: "10.17.5.10"
    kubectl_path: "/usr/local/bin/kubectl"

  pre_tasks:
    - name: 📄 Leer token JWT desde el primer master
      raw: cat /tmp/traefik-token.jwt
      register: token_raw
      delegate_to: "{{ groups['masters'][0] }}"
      changed_when: false

    - name: 📅 Guardar token JWT en el nodo controlador
      copy:
        content: "{{ token_raw.stdout | trim }}"
        dest: "{{ kubeconfig_token_path }}"
        owner: victory
        group: victory
        mode: "0600"

  tasks:
    - name: 📁 Crear carpeta .kube si no existe
      file:
        path: "{{ kubeconfig_path | dirname }}"
        state: directory
        owner: victory
        group: victory
        mode: "0700"

    - name: 🔐 Crear archivo kubeconfig con token JWT
      copy:
        dest: "{{ kubeconfig_path }}"
        owner: victory
        group: victory
        mode: "0600"
        content: |
          apiVersion: v1
          kind: Config
          clusters:
          - name: default
            cluster:
              server: https://{{ vip_kubernetes }}:6443
              insecure-skip-tls-verify: true
          contexts:
          - name: default
            context:
              cluster: default
              user: remote-access
          current-context: default
          users:
          - name: remote-access
            user:
              token: "{{ token_raw.stdout | trim }}"

    - name: 🧪 Verificar conexión con el clúster Kubernetes
      command: "{{ kubectl_path }} get nodes"
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      register: kubectl_result
      failed_when: kubectl_result.rc != 0
      changed_when: false

    - name: 📊 Mostrar resultado de kubectl
      debug:
        msg: "{{ kubectl_result.stdout }}"