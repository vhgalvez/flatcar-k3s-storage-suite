- name: 🔐 0️⃣ Generar token JWT en master con permisos adecuados
  hosts: masters[0]
  gather_facts: false
  become: true

  vars:
    kubeconfig_path: "/etc/rancher/k3s/k3s.yaml"
    local_token_path: "/tmp/traefik-token.jwt"
    token_duration: "87600h"  # 10 años
    serviceaccount_name: "remote-access"
    rolebinding_name: "remote-access-admin"

  tasks:

    - name: 🧹 Eliminar ServiceAccount anterior si existe
      shell: |
        k3s kubectl delete serviceaccount {{ serviceaccount_name }} --ignore-not-found=true
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: 🧹 Eliminar ClusterRoleBinding anterior si existe
      shell: |
        k3s kubectl delete clusterrolebinding {{ rolebinding_name }} --ignore-not-found=true
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: 🧾 Crear ServiceAccount '{{ serviceaccount_name }}'
      shell: |
        k3s kubectl create serviceaccount {{ serviceaccount_name }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: 🔑 Crear ClusterRoleBinding '{{ rolebinding_name }}' con permisos de admin
      shell: |
        k3s kubectl create clusterrolebinding {{ rolebinding_name }} \
        --clusterrole=cluster-admin \
        --serviceaccount=default:{{ serviceaccount_name }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: 🔐 Generar token JWT para ServiceAccount '{{ serviceaccount_name }}'
      shell: |
        export KUBECONFIG={{ kubeconfig_path }}
        k3s kubectl create token {{ serviceaccount_name }} --duration={{ token_duration }}
      register: token_output
      changed_when: false

    - name: 📄 Guardar token localmente en el master
      shell: |
        echo "{{ token_output.stdout }}" > {{ local_token_path }}

    - name: 🟢 Token generado correctamente
      debug:
        var: token_output.stdout
      no_log: true