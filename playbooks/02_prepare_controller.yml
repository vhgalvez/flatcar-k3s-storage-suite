# playbooks\02_prepare_controller.yml
---
- name: 2 Preparar nodo controlador con kubectl y helm
  hosts: controller
  become: true
  gather_facts: true

  vars:
    kubectl_version: "v1.29.0"
    helm_version: "v3.14.0"
    kubectl_path: "/usr/local/bin/kubectl"
    helm_path: "/usr/local/bin/helm"
    helm_install_tmp: "/tmp/helm_install"

  tasks:
    - name: 📦 Instalar paquetes base
      package:
        name: [python3-pip, git, curl]
        state: present

    - name: 🧪 Instalar módulo Python Kubernetes
      pip:
        name: kubernetes

    - name: 📅 Descargar kubectl {{ kubectl_version }}
      get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_version }}/bin/linux/amd64/kubectl"
        dest: /tmp/kubectl
        mode: "0755"

    - name: ✅ Mover kubectl a {{ kubectl_path }}
      copy:
        src: /tmp/kubectl
        dest: "{{ kubectl_path }}"
        remote_src: yes
        mode: "0755"

    - name: 📁 Crear directorio temporal para instalar Helm
      file:
        path: "{{ helm_install_tmp }}"
        state: directory
        mode: "0755"

    - name: 📅 Descargar Helm {{ helm_version }}
      get_url:
        url: "https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz"
        dest: "{{ helm_install_tmp }}/helm.tar.gz"

    - name: 📦 Extraer Helm
      unarchive:
        src: "{{ helm_install_tmp }}/helm.tar.gz"
        dest: "{{ helm_install_tmp }}"
        remote_src: yes

    - name: ✅ Mover Helm a {{ helm_path }}
      copy:
        src: "{{ helm_install_tmp }}/linux-amd64/helm"
        dest: "{{ helm_path }}"
        remote_src: yes
        mode: "0755"

    - name: 🧹 Borrar temporales de Helm
      file:
        path: "{{ helm_install_tmp }}"
        state: absent
