# playbooks/05_deploy_longhorn.yml
---
- name: 🚀 5 - Instalar y validar Longhorn con Helm
  hosts: controller
  become: true
  gather_facts: false

  vars:
    kubeconfig_path: "/home/victory/.kube/config"
    helm_bin: "/usr/local/bin/helm"
    longhorn_namespace: "longhorn-system"

  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
    KUBECONFIG: "{{ kubeconfig_path }}"

  pre_tasks:

    - name: 🔍 Comprobar si existe el namespace Longhorn
      shell: kubectl get namespace {{ longhorn_namespace }} || true
      register: ns_check
      changed_when: false

    - name: 🔍 Verificar si hay recursos en el namespace Longhorn
      raw: kubectl get all -n {{ longhorn_namespace }} || true
      register: longhorn_check
      changed_when: false
      when: "'NotFound' not in ns_check.stdout"

    - name: ⚠️ Abortamos si hay residuos en el namespace existente
      fail:
        msg: |
          ⚠️ El namespace '{{ longhorn_namespace }}' contiene recursos de una instalación anterior.
          🧹 Ejecuta: ansible-playbook playbooks/08_cleanup_longhorn.yml -e "confirm_cleanup=yes"
          Recursos detectados:
          {{ longhorn_check.stdout }}
      when:
        - "'NotFound' not in ns_check.stdout"
        - "'No resources found' not in longhorn_check.stdout"

  tasks:

    - name: 📥 Añadir repositorio Helm de Longhorn
      raw: "{{ helm_bin }} repo add longhorn https://charts.longhorn.io || true"

    - name: 🔄 Actualizar repositorio Helm
      raw: "{{ helm_bin }} repo update"

    - name: 🚀 Instalar Longhorn con Helm
      raw: |
        {{ helm_bin }} upgrade --install longhorn longhorn/longhorn \
          --namespace {{ longhorn_namespace }} \
          --create-namespace \
          --wait \
          --timeout 10m0s
      register: longhorn_install
      failed_when: longhorn_install.rc != 0

    - name: ⏳ Esperar que los pods de Longhorn estén listos (máx 5 minutos)
      raw: kubectl wait --for=condition=Ready pod -n {{ longhorn_namespace }} --all --timeout=300s
      register: pod_ready
      failed_when: pod_ready.rc != 0

    - name: 📊 Mostrar estado de pods, PVCs y PVs
      raw: |
        echo "📦 Pods:"
        kubectl get pods -n {{ longhorn_namespace }}

        echo ""
        echo "📁 PVCs:"
        kubectl get pvc -A

        echo ""
        echo