# playbooks\install_longhorn.yml
- name: üõ°Ô∏è Verificar limpieza previa y luego instalar Longhorn
  hosts: controller
  gather_facts: false
  become: true

  vars:
    longhorn_namespace: "longhorn-system"
    kubeconfig_path: "/home/victory/.kube/config"
    helm_bin_path: "/usr/local/bin"

  pre_tasks:

    - name: üîç Verificar si existen recursos en el namespace de Longhorn
      ansible.builtin.raw: |
        export KUBECONFIG={{ kubeconfig_path }}
        kubectl get all --namespace {{ longhorn_namespace }} || true
      register: longhorn_check
      changed_when: false

    - name: ‚ö†Ô∏è Mostrar advertencia si hay residuos de Longhorn
      ansible.builtin.fail:
        msg: |
          ‚ö†Ô∏è Se detectaron recursos existentes en el namespace '{{ longhorn_namespace }}'.
          ‚ö†Ô∏è Puede haber residuos de una instalaci√≥n anterior. 
          üßπ Por favor, ejecuta primero:
            ansible-playbook -i inventory/hosts.ini playbooks/playbook_cleanup.yml -e "confirm_cleanup=yes"
          Recursos encontrados:
          {{ longhorn_check.stdout }}
      when: "'No resources found' not in longhorn_check.stdout"

  tasks:

    - name: üì• A√±adir y actualizar repositorio Helm de Longhorn
      ansible.builtin.raw: |
        export KUBECONFIG={{ kubeconfig_path }}
        export PATH=$PATH:{{ helm_bin_path }}
        helm repo add longhorn https://charts.longhorn.io || true
        helm repo update

    - name: üöÄ Instalar o actualizar Longhorn usando Helm
      ansible.builtin.raw: |
        export KUBECONFIG={{ kubeconfig_path }}
        export PATH=$PATH:{{ helm_bin_path }}
        helm upgrade --install longhorn longhorn/longhorn \
          --namespace {{ longhorn_namespace }} \
          --create-namespace \
          --cleanup-on-fail \
          --wait \
          --timeout 10m0s
      register: longhorn_result
      failed_when: longhorn_result.rc != 0

    - name: ‚è≥ Esperar a que los pods de Longhorn est√©n listos (m√°x 5 minutos)
      ansible.builtin.raw: |
        export KUBECONFIG={{ kubeconfig_path }}
        kubectl --namespace {{ longhorn_namespace }} wait --for=condition=Ready pod --all --timeout=300s
      register: wait_result
      failed_when: wait_result.rc != 0

    - name: üìä Mostrar estado final de los pods de Longhorn
      ansible.builtin.raw: |
        export KUBECONFIG={{ kubeconfig_path }}
        kubectl --namespace {{ longhorn_namespace }} get pods
      register: longhorn_pods

    - name: ‚úÖ Imprimir lista de pods Longhorn
      ansible.builtin.debug:
        var: longhorn_pods.stdout_lines