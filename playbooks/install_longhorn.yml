# Ruta: playbooks/install_longhorn.yml
# üöÄ Instalar Longhorn en el cl√∫ster Kubernetes y etiquetar nodos worker (modo raw)

- name: üöÄ Instalar Longhorn y etiquetar nodos worker
  hosts: masters  # Ejecutar s√≥lo en los nodos maestros
  gather_facts: false
  become: true

  vars:
    kubeconfig_path: "/etc/rancher/k3s/k3s.yaml"
    longhorn_namespace: "longhorn-system"
    longhorn_manifest_url: "https://raw.githubusercontent.com/longhorn/longhorn/v1.6.1/deploy/longhorn.yaml"

  tasks:
    # Verificar que los nodos worker1, worker2 y worker3 existan
    - name: üîç Verificar que los nodos worker1, worker2 y worker3 existen
      raw: |
        k3s kubectl --kubeconfig {{ kubeconfig_path }} get nodes | grep -E "worker1|worker2|worker3"
      register: node_check
      failed_when: node_check.rc != 0
      changed_when: false

    # Etiquetar worker1
    - name: üè∑Ô∏è worker1 - Etiqueta como longhorn-node
      raw: |
        k3s kubectl label node worker1.cefaslocalserver.com longhorn-node=true --overwrite

    # Etiquetar worker2
    - name: üè∑Ô∏è worker2 - Etiqueta como longhorn-node
      raw: |
        k3s kubectl label node worker2.cefaslocalserver.com longhorn-node=true --overwrite

    # Etiquetar worker3
    - name: üè∑Ô∏è worker3 - Etiqueta como longhorn-node
      raw: |
        k3s kubectl label node worker3.cefaslocalserver.com longhorn-node=true --overwrite

    # Verificar si el namespace longhorn-system ya existe
    - name: üîç Verificar si el namespace {{ longhorn_namespace }} ya existe
      raw: |
        sudo k3s kubectl --kubeconfig {{ kubeconfig_path }} get ns {{ longhorn_namespace }}
      register: ns_check
      failed_when: false
      changed_when: false

    # Crear namespace para Longhorn si no existe
    - name: üì¶ Crear namespace para Longhorn si no existe
      raw: |
        sudo k3s kubectl --kubeconfig {{ kubeconfig_path }} create ns {{ longhorn_namespace }}
      when: ns_check.rc != 0

    # Aplicar manifiesto de instalaci√≥n de Longhorn
    - name: üì• Aplicar manifiesto de instalaci√≥n de Longhorn
      raw: |
        sudo k3s kubectl --kubeconfig {{ kubeconfig_path }} apply -f {{ longhorn_manifest_url }}
      register: apply_longhorn

    # Esperar a que los pods de Longhorn est√©n listos (m√°x 5 minutos)
    - name: ‚è≥ Esperar a que los pods de Longhorn est√©n listos (m√°x 5 minutos)
      raw: |
        sudo k3s kubectl --kubeconfig {{ kubeconfig_path }} -n {{ longhorn_namespace }} wait --for=condition=Ready pod --all --timeout=300s
      register: wait_longhorn
      failed_when: wait_longhorn.rc != 0

    # Mostrar estado final de los pods Longhorn
    - name: üìä Mostrar estado final de los pods Longhorn
      raw: |
        sudo k3s kubectl --kubeconfig {{ kubeconfig_path }} -n {{ longhorn_namespace }} get pods
      register: longhorn_pods

    # Imprimir lista de pods Longhorn
    - name: üìã Imprimir lista de pods Longhorn
      debug:
        var: longhorn_pods.stdout_lines